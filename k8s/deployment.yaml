apiVersion: v1
kind: Namespace
metadata:
  name: ecotracker
  labels:
    name: ecotracker
    environment: production

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ecotracker-config
  namespace: ecotracker
data:
  NODE_ENV: "production"
  PORT: "3001"
  CORS_ORIGIN: "https://ecotracker.yourdomain.com"

---
apiVersion: v1
kind: Secret
metadata:
  name: ecotracker-secrets
  namespace: ecotracker
type: Opaque
data:
  JWT_SECRET: eW91ci1zdXBlci1zZWNyZXQtand0LWtleQ==  # base64 encoded
  GEMINI_API_KEY: ""  # Add your base64 encoded API key

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ecotracker-data
  namespace: ecotracker
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ecotracker-app
  namespace: ecotracker
  labels:
    app: ecotracker
    tier: backend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: ecotracker
      tier: backend
  template:
    metadata:
      labels:
        app: ecotracker
        tier: backend
    spec:
      containers:
      - name: ecotracker
        image: ghcr.io/yourusername/ecotracker:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3001
          name: http
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: ecotracker-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: ecotracker-config
              key: PORT
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              name: ecotracker-config
              key: CORS_ORIGIN
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: ecotracker-secrets
              key: JWT_SECRET
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: ecotracker-secrets
              key: GEMINI_API_KEY
        - name: DATABASE_URL
          value: "sqlite:///app/data/database.sqlite"
        volumeMounts:
        - name: data-volume
          mountPath: /app/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: ecotracker-data
      securityContext:
        fsGroup: 1001

---
apiVersion: v1
kind: Service
metadata:
  name: ecotracker-service
  namespace: ecotracker
  labels:
    app: ecotracker
spec:
  type: ClusterIP
  ports:
  - port: 3001
    targetPort: 3001
    protocol: TCP
    name: http
  selector:
    app: ecotracker
    tier: backend

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ecotracker-ingress
  namespace: ecotracker
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/proxy-body-size: "16m"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - ecotracker.yourdomain.com
    secretName: ecotracker-tls
  rules:
  - host: ecotracker.yourdomain.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: ecotracker-service
            port:
              number: 3001
      - path: /
        pathType: Prefix
        backend:
          service:
            name: nginx-service
            port:
              number: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ecotracker-hpa
  namespace: ecotracker
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ecotracker-app
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: ecotracker-pdb
  namespace: ecotracker
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: ecotracker
      tier: backend
